import tkinter as tk
from threading import Thread, Event
from pynput import mouse
import pyautogui
import time

# --- Ayarlar ---
CPS = 16
INTERVAL = 1 / CPS
# ---------------

running = False       # Aç/Kapa durumu
mouse_down = False    # Sol tık basılı mı?
stop_event = Event()  # Threadi kapatmak için

def click_loop():
    """Arka planda sürekli çalışır, sol tık basılı ve makro açıksa tıklar"""
    while not stop_event.is_set():
        if running and mouse_down:
            pyautogui.click()
            time.sleep(INTERVAL)
        else:
            time.sleep(0.01)

def on_click(x, y, button, pressed):
    """Fare olaylarını yakalar (sol tık basılı mı?)"""
    global mouse_down
    try:
        if button.name == "left":
            mouse_down = pressed
    except AttributeError:
        # Bazı sistemlerde button == Button.left olarak geliyor
        from pynput.mouse import Button
        if button == Button.left:
            mouse_down = pressed

def toggle():
    """Makroyu aç/kapat"""
    global running
    running = not running
    status_label.config(text=f"Durum: {'AÇIK' if running else 'KAPALI'}")

# --- GUI ---
root = tk.Tk()
root.title("AutoClicker 16 CPS")
root.geometry("250x100")

toggle_button = tk.Button(root, text="Aç / Kapat", command=toggle, width=15)
toggle_button.pack(pady=10)

status_label = tk.Label(root, text="Durum: KAPALI")
status_label.pack()

# --- Mouse listener ---
listener = mouse.Listener(on_click=on_click)
listener.start()

# --- Click thread ---
thread = Thread(target=click_loop, daemon=True)
thread.start()

def on_close():
    stop_event.set()
    listener.stop()
    root.destroy()

root.protocol("WM_DELETE_WINDOW", on_close)
root.mainloop()